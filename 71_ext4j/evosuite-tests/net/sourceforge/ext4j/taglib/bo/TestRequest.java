/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.ext4j.taglib.bo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.servlet.http.HttpServletRequest;
import net.sourceforge.ext4j.taglib.bo.Request;
import net.sourceforge.ext4j.taglib.bo.RequestParam;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestRequest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Request request0 = new Request(")ID^BW?aOExH\"G< `!");
      assertEquals(")ID^BW?aOExH\"G< `!=", request0.toString());
      assertNotNull(request0);
      
      request0.toBaseURL();
      request0.getValue(")ID^BW?aOExH\"G< `!", ")ID^BW?aOExH\"G< `!");
      assertEquals(")ID^BW", request0.getBaseURL());
  }

  @Test
  public void test1()  throws Throwable  {
      Request request0 = new Request((HttpServletRequest) null);
      // Undeclared exception!
      try {
        request0.addParam((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Request request0 = new Request();
      int int0 = request0.hashCode();
      assertEquals(3392903, int0);
      assertEquals(false, request0.isWebRequest());
  }

  @Test
  public void test3()  throws Throwable  {
      Request request0 = new Request(")ID^BW?aOExH\"G< `!");
      assertNotNull(request0);
      
      request0.setParam(")ID^BW?aOExH\"G< `!", ")ID^BW?aOExH\"G< `!");
      Request request1 = (Request)request0.clone();
      assertEquals("?aOExH\"G< `!=&)ID^BW?aOExH\"G< `!=)ID^BW%3FaOExH\"G<+`!", request0.getQueryString());
      assertNotNull(request1);
      assertTrue(request0.equals(request1));
  }

  @Test
  public void test4()  throws Throwable  {
      Request request0 = new Request(")ID^BW?aOExH\"G< `!");
      assertNotNull(request0);
      
      Request request1 = (Request)request0.setHashValue(")ID^BW?aOExH\"G< `!");
      boolean boolean0 = request1.equals((Object) request0);
      assertEquals(")ID^BW?aOExH\"G< `!=#)ID^BW?aOExH\"G< `!", request0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Request request0 = new Request();
      boolean boolean0 = request0.isWebRequest();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      Request request0 = new Request(")ID^BW?aOExH\"G< `!");
      assertNotNull(request0);
      
      Request request1 = (Request)request0.setBaseURL(")ID^BW?aOExH\"G< `!");
      assertEquals(")ID^BW?aOExH\"G< `!?aOExH\"G< `!=", request0.toString());
      assertEquals(")ID^BW?aOExH\"G< `!?aOExH\"G< `!=", request1.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      Request request0 = new Request("CfW++#Ju.h\"V~");
      assertNotNull(request0);
      
      request0.getParam("CfW++#Ju.h\"V~");
      assertEquals("CfW++", request0.getBaseURL());
      assertEquals("CfW++#Ju.h\"V~", request0.toString());
      assertEquals(true, request0.isWebRequest());
  }

  @Test
  public void test8()  throws Throwable  {
      Request request0 = new Request(")ID^W?aOEx< `!");
      assertNotNull(request0);
      
      RequestParam requestParam0 = new RequestParam(")ID^W?aOEx< `!");
      Request request1 = (Request)request0.setParam(requestParam0);
      assertEquals(")ID^W?aOEx< `!=", request1.toString());
      
      request0.cleanEmptyParams();
      assertEquals(")ID^W", request0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      Request request0 = new Request(")ID^W?aOEx< `!");
      assertNotNull(request0);
      
      request0.parse(")ID^W?aOEx< `!");
      assertEquals("?aOEx< `!=&aOEx< `!=", request0.getQueryString());
      
      request0.cleanEmptyParams();
      assertEquals(")ID^W", request0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      Request request0 = new Request("file:/)I^BW?aOEHG< `!");
      request0.setParam("file:/)I^BW?aOEHG< `!", "file:/)I^BW?aOEHG< `!");
      request0.cleanEmptyParams();
      assertEquals("null?file:/)I^BW?aOEHG< `!=file:/)I^BW%3FaOEHG<+`!", request0.toString());
      assertEquals("?file:/)I^BW?aOEHG< `!=file:/)I^BW%3FaOEHG<+`!", request0.getQueryString());
  }

  @Test
  public void test11()  throws Throwable  {
      Request request0 = new Request();
      request0.getParam("ile:7fil :/kqoy", false);
      assertEquals(false, request0.isWebRequest());
  }

  @Test
  public void test12()  throws Throwable  {
      Request request0 = new Request(")ID^BW?aOExH\"G< `!");
      assertNotNull(request0);
      
      String string0 = request0.getValue(")ID^BW?aOExH\"G< `!", ")ID^BW?aOExH\"G< `!");
      assertEquals(true, request0.isWebRequest());
      assertEquals(")ID^BW?aOExH\"G< `!=", request0.toString());
      assertNotNull(string0);
      assertEquals(")ID^BW?aOExH\"G< `!", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      Request request0 = new Request("XI^BW?%>EH\"G<D`");
      assertNotNull(request0);
      
      RequestParam requestParam0 = new RequestParam("XI^BW?%>EH\"G<D`");
      Request request1 = (Request)request0.setParam(requestParam0);
      assertNotNull(request1);
      
      String string0 = request0.getValue("XI^BW?%>EH\"G<D`", "XI^BW?%>EH\"G<D`");
      assertEquals(true, request0.isWebRequest());
      assertEquals("XI^BW?%>EH\"G<D`", string0);
      assertNotNull(string0);
      assertEquals("XI^BW?%>EH\"G<D`=", request0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      Request request0 = new Request(true);
      request0.addParam("", "");
      String string0 = request0.getValue("", "");
      assertEquals("?=", request0.getQueryString());
      assertEquals("", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      Request request0 = new Request(")IDBW?aOExH\"Gr< `[");
      assertNotNull(request0);
      
      int int0 = request0.getValue(")IDBW?aOExH\"Gr< `[", (-10));
      assertEquals((-10), int0);
      assertEquals(true, request0.isWebRequest());
      assertEquals(")IDBW?aOExH\"Gr< `[=", request0.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      Request request0 = new Request();
      int int0 = request0.getValue("null", 9);
      assertEquals(9, int0);
      assertEquals(false, request0.isWebRequest());
  }

  @Test
  public void test17()  throws Throwable  {
      Request request0 = new Request("CfW++#Ju.h\"V~");
      assertNotNull(request0);
      
      RequestParam requestParam0 = new RequestParam("DIGEST");
      Request request1 = (Request)request0.setParam(requestParam0);
      assertNotNull(request1);
      
      int int0 = request0.getValue("DIGEST", 1415);
      assertEquals(true, request0.isWebRequest());
      assertEquals("CfW++#Ju.h\"V~", request0.toString());
      assertEquals(1415, int0);
      assertEquals("CfW++", request0.getBaseURL());
  }

  @Test
  public void test18()  throws Throwable  {
      Request request0 = new Request();
      request0.addParam("ile:7fil :/kqoy", "ile:7fil :/kqoy");
      int int0 = request0.getValue("ile:7fil :/kqoy", (-1521485428));
      assertEquals("?ile:7fil :/kqoy=ile:7fil+:/kqoy", request0.getQueryString());
      assertEquals((-1521485428), int0);
  }

  @Test
  public void test19()  throws Throwable  {
      Request request0 = new Request();
      Request request1 = (Request)request0.removeParam("`o");
      assertEquals(false, request1.isWebRequest());
      assertNotNull(request1);
  }

  @Test
  public void test20()  throws Throwable  {
      Request request0 = new Request("x87'!mf!? #", false);
      assertNotNull(request0);
      
      request0.setParam("x87'!mf!? #", "x87'!mf!? #");
      request0.removeParam("x87'!mf!?x87'!mf!? #=x87'!mf!%3F+%23#");
      assertEquals("?x87'!mf!? #=x87'!mf!%3F+%23", request0.getQueryString());
      assertEquals("x87'!mf!?x87'!mf!? #=x87'!mf!%3F+%23#", request0.toString());
  }

  @Test
  public void test21()  throws Throwable  {
      Request request0 = new Request();
      request0.setParam("`o", "`o");
      assertEquals("?`o=`o", request0.getQueryString());
      
      Request request1 = (Request)request0.removeParam("`o");
      assertEquals("null", request1.toString());
  }

  @Test
  public void test22()  throws Throwable  {
      Request request0 = new Request("CfW++#Ju.h\"V~");
      assertNotNull(request0);
      
      Request request1 = (Request)request0.setParam((RequestParam) null);
      assertEquals("CfW++#Ju.h\"V~", request1.toString());
      assertNotNull(request1);
      assertEquals("CfW++", request1.getBaseURL());
      assertEquals(true, request1.isWebRequest());
  }

  @Test
  public void test23()  throws Throwable  {
      Request request0 = new Request("x87'!mf!? #", false);
      assertNotNull(request0);
      
      String string0 = request0.toString();
      assertNotNull(string0);
      assertEquals("x87'!mf!#", string0);
      assertEquals(true, request0.isWebRequest());
  }

  @Test
  public void test24()  throws Throwable  {
      Request request0 = new Request();
      boolean boolean0 = request0.equals((Object) "ile:7fil :/kqoy");
      assertEquals(false, request0.isWebRequest());
      assertEquals(false, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      Request request0 = new Request("file:/)I^BW?aOEHG< `!");
      // Undeclared exception!
      try {
        request0.equals((Object) request0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test26()  throws Throwable  {
      Request request0 = new Request("CfW++#Ju.h\"V~");
      assertNotNull(request0);
      
      Request request1 = new Request(false);
      boolean boolean0 = request0.equals((Object) request1);
      assertEquals(false, request1.isWebRequest());
      assertEquals(false, boolean0);
      assertEquals("CfW++#Ju.h\"V~", request0.toString());
      assertEquals("CfW++", request0.getBaseURL());
      assertEquals(true, request0.isWebRequest());
  }

  @Test
  public void test27()  throws Throwable  {
      Request request0 = new Request();
      Request request1 = new Request("`o");
      assertNotNull(request1);
      
      boolean boolean0 = request0.equals((Object) request1);
      assertEquals(true, request1.isWebRequest());
      assertEquals(false, request0.isWebRequest());
      assertEquals("`o", request1.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test28()  throws Throwable  {
      Request request0 = new Request(")ID^dW?aOkxH\"G`!");
      assertNotNull(request0);
      
      Request request1 = new Request("");
      assertNotNull(request1);
      
      boolean boolean0 = request0.equals((Object) request1);
      assertEquals(true, request1.isWebRequest());
      assertEquals(")ID^dW?aOkxH\"G`!=", request0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test29()  throws Throwable  {
      Request request0 = new Request(")ID^W?aOEx< `!");
      assertNotNull(request0);
      
      Request request1 = new Request(")ID^W?aOEx< `!", true);
      boolean boolean0 = request0.equals((Object) request1);
      assertEquals(true, request1.isWebRequest());
      assertEquals(")ID^W?aOEx< `!=", request0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test30()  throws Throwable  {
      Request request0 = new Request(")ID^BW?aOExH\"G< `!");
      assertNotNull(request0);
      
      Request request1 = (Request)request0.setParam(")ID^BW?aOExH\"G< `!", ")ID^BW?aOExH\"G< `!");
      request0.addParam(")ID^BW?aOExH\"G< `!", "M(Y;3$q");
      boolean boolean0 = request0.equals((Object) request1);
      assertEquals(")ID^BW?aOExH\"G< `!=&)ID^BW?aOExH\"G< `!=)ID^BW%3FaOExH\"G<+`!&)ID^BW?aOExH\"G< `!=M(Y;3$q", request0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      Request request0 = new Request(")ID^BW?aOExH\"G< `!");
      assertNotNull(request0);
      
      Request request1 = (Request)request0.setHashValue(")ID^BW?aOExH\"G< `!");
      Request request2 = (Request)request0.clone();
      assertNotNull(request2);
      
      request1.equals((Object) request2);
      assertEquals(")ID^BW?aOExH\"G< `!=#)ID^BW?aOExH\"G< `!", request0.toString());
      assertEquals(")ID^BW?aOExH\"G< `!=", request2.toString());
  }

  @Test
  public void test32()  throws Throwable  {
      Request request0 = new Request((HttpServletRequest) null);
      request0.parse((String) null);
      assertEquals(false, request0.isWebRequest());
  }

  @Test
  public void test33()  throws Throwable  {
      Request request0 = new Request(true);
      request0.addParam("", "");
      Request request1 = (Request)request0.clone();
      assertNotNull(request1);
      assertEquals("null?=", request0.toString());
      assertEquals("?=", request0.getQueryString());
  }

  @Test
  public void test34()  throws Throwable  {
      Request request0 = new Request((HttpServletRequest) null);
      request0.URLEncode((String) null);
      assertEquals(false, request0.isWebRequest());
  }

  @Test
  public void test35()  throws Throwable  {
      Request request0 = new Request((HttpServletRequest) null);
      request0.URLDecode((String) null);
      assertEquals(false, request0.isWebRequest());
  }
}
