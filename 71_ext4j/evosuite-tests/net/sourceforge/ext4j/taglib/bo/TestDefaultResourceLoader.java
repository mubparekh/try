/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.ext4j.taglib.bo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.net.URL;
import net.sourceforge.ext4j.taglib.bo.DefaultResourceLoader;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestDefaultResourceLoader {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultResourceLoader defaultResourceLoader0 = new DefaultResourceLoader();
      // Undeclared exception!
      try {
        defaultResourceLoader0.getResource("");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * java.net.MalformedURLException: no protocol: 
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultResourceLoader defaultResourceLoader0 = new DefaultResourceLoader();
      // Undeclared exception!
      try {
        defaultResourceLoader0.getResource((String) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Location must not be null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultResourceLoader defaultResourceLoader0 = new DefaultResourceLoader();
      URL uRL0 = defaultResourceLoader0.getResource("classpath:");
      assertNull(uRL0.getQuery());
  }
}
